<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.h3c</groupId>
	<artifactId>SparkDemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<jdk.version>1.8</jdk.version>
		<spark.version>2.3</spark.version>
		<spark.freemarker.version>2.0.0</spark.freemarker.version>
		<freemarker.version>2.3.23</freemarker.version>
		<spring.version>4.2.0.RELEASE</spring.version>
		<hsqldb.version>2.3.3</hsqldb.version>
		<dbcp.version>2.1.1</dbcp.version>
		<jbcrypt.version>0.4</jbcrypt.version>
		<commons.beanutils.version>1.9.2</commons.beanutils.version>
	</properties>

	<dependencies>
		<!-- Spark JAva -->
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>com.j2html</groupId>
			<artifactId>j2html</artifactId>
			<version>0.7</version>
		</dependency>
		<!-- Spark Freemarker -->
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-template-freemarker</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.1</version>
		</dependency>
		<!-- Freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>
        
		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
    
		<!-- Spring Context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring JDBC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.2.0.RELEASE</version>
		</dependency>

		<!-- HyperSQL DB -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>3.0.0.ALPHA03</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>3.0.0.ALPHA03</version>
		</dependency>
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>3.1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.13</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.13</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.20.0-GA</version>
		</dependency>

		<!-- Connection pool -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${dbcp.version}</version>
		</dependency>

		<!-- Password hashes -->
		<dependency>
			<groupId>de.svenkubiak</groupId>
			<artifactId>jBCrypt</artifactId>
			<version>${jbcrypt.version}</version>
		</dependency>

		<!-- Populate bean from request -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons.beanutils.version}</version>
		</dependency>
        <dependency>
	<groupId>com.google.code.findbugs</groupId>
	<artifactId>jsr305</artifactId>
	<version>3.0.1</version>
</dependency>
        <dependency>
	<groupId>com.google.code.findbugs</groupId>
	<artifactId>findbugs</artifactId>
	<version>3.0.1</version>
</dependency>
        
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160212</version>
		</dependency>

		<!-- jetty服务器依赖 -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>9.3.8.v20160314</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>9.3.8.v20160314</version>
		</dependency>
		<!-- jetty对jsr的实现 -->
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
			<version>9.3.8.v20160314</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-client-impl</artifactId>
			<version>9.3.8.v20160314</version>
		</dependency>
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>8.5.0</version>
		</dependency>

	</dependencies>
	<build>
		<!-- <sourceDirectory>src/main/java</sourceDirectory> -->
		<plugins>
			<!-- 执行编译的插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<!-- 指定source和target的版本 -->
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 用来将工程打包成带源代码的jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
        <execution>
          <id>attach-sources</id>
          <phase>deploy</phase>
          <goals><goal>jar-no-fork</goal></goals> 
        </execution>
      </executions>
			</plugin>
			<!-- 打javadoc包 -->
			<plugin>          
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-javadoc-plugin</artifactId>
    <version>2.10.3</version>
    <configuration>
    <encoding>UTF-8</encoding>
    <failOnError>false</failOnError>
    <additionalparam>-Xdoclint:none</additionalparam>
    </configuration>
   <executions> 
        <execution> 
          <id>attach-javadocs</id>
          <phase>deploy</phase>
          <goals><goal>jar</goal></goals> 
        </execution> 
      </executions> 
  </plugin>
			<!-- 可用来将工程依赖的jar包和工程都打成一个jar打包，assembly:assembly -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>com.minitwit.App</mainClass>
						</manifest>
					</archive>
				</configuration>
				<!-- <executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>assembly</goal>
						</goals>
					</execution>
				</executions> -->
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.8.v20160314</version>
			</plugin>
			<!-- 打可执行jar包，依赖放在同级的lib目录中 -->
           <plugin>  
            <groupId>org.apache.maven.plugins</groupId>  
            <artifactId>maven-jar-plugin</artifactId>  
            <version>2.4</version>  
              <configuration>
                <archive>  
                    <!--  生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->  
                    <addMavenDescriptor>false</addMavenDescriptor>  
                    <manifest>  
                        <!--  是否要把第三方jar放到manifest的classpath中 -->  
                        <addClasspath>true</addClasspath>  
                         <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/  -->
                        <classpathPrefix>lib/</classpathPrefix>  
                        <mainClass>com.minitwit.App</mainClass>  
                    </manifest>  
                </archive>  
            </configuration>  
        </plugin>  
        <!-- 拷贝依赖的jar包到lib目录 -->  
            <plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-dependency-plugin</artifactId>  
                <executions>  
                    <execution>  
                        <id>copy</id>  
                        <phase>package</phase>  
                        <goals>  
                            <goal>copy-dependencies</goal>  
                        </goals>  
                        <configuration>  
                            <outputDirectory>  
                                ${project.build.directory}/lib  
                            </outputDirectory>  
                        </configuration>  
                    </execution>  
                </executions>  
            </plugin>  
			<!-- 解决资源文件的编码问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 执行单元测试，默认生成txt和兼容Junit的xml格式报告 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<!-- <configuration>
					<skipTests>true</skipTests>
				</configuration> -->
			</plugin>
			<!-- 生成html格式的测试报告，surefire-report:report-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12.2</version>
				<configuration>
					<showSuccess>false</showSuccess>
				</configuration>
			</plugin>

			<!-- 测试覆盖率的报告，cobertura:cobertura  -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
				<!-- <executions>
					<execution>
						<id>cobertura-report</id>
						<phase>package</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions> -->
			</plugin>
			<plugin> 
			<groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-deploy-plugin</artifactId>
       <version>2.8.2</version> 
      <executions> 
        <execution> 
          <id>deploy</id>
          <phase>deploy</phase>
          <goals><goal>deploy</goal></goals> 
        </execution> 
      </executions> 
    </plugin>
		</plugins>
	</build>
	<!-- jar包发布地址 -->
		<distributionManagement>  
    <repository>
    <id>Releases</id>
    <name>Releases</name>
    <url>http://172.27.12.66:8081/nexus/content/repositories/Releases</url>
  </repository>
    <snapshotRepository>
    <id>snapshots</id>
    <name>snapshots</name>
    <url>http://172.27.12.66:8081/nexus/content/repositories/snapshots</url>
   </snapshotRepository>
</distributionManagement> 
</project>